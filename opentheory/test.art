nil
"P"
"->"
typeOp
0
def
"bool"
typeOp
nil
opType
1
def
1
ref
nil
cons
2
def
cons
opType
3
def
var
"x"
1
ref
var
4
def
"="
const
5
def
0
ref
1
ref
3
ref
nil
cons
cons
opType
constTerm
6
def
4
ref
varTerm
7
def
appTerm
7
ref
appTerm
8
def
absTerm
9
def
nil
cons
cons
nil
cons
nil
cons
cons
"A"
2
ref
cons
nil
cons
nil
nil
cons
cons
6
ref
refl
10
def
6
ref
"Data.Bool.!"
const
11
def
0
ref
0
ref
"A"
varType
12
def
2
ref
cons
opType
13
def
2
ref
cons
opType
14
def
constTerm
15
def
"P"
13
ref
var
varTerm
16
def
appTerm
17
def
appTerm
refl
nil
"p"
13
ref
var
18
def
16
ref
nil
cons
cons
nil
cons
nil
cons
cons
18
ref
5
ref
0
ref
13
remove
14
ref
nil
cons
cons
opType
constTerm
18
remove
varTerm
19
def
appTerm
"x"
12
remove
var
"Data.Bool.T"
const
1
ref
constTerm
20
def
absTerm
appTerm
absTerm
21
def
19
remove
appTerm
betaConv
subst
appThm
nil
5
remove
0
ref
14
ref
0
ref
14
remove
2
ref
cons
opType
nil
cons
cons
opType
constTerm
15
remove
appTerm
21
remove
appTerm
axiom
16
remove
refl
appThm
eqMp
appThm
17
remove
refl
22
def
appThm
22
remove
eqMp
subst
subst
4
remove
nil
"t"
1
remove
var
23
def
8
remove
nil
cons
cons
nil
cons
nil
cons
cons
10
remove
6
remove
23
remove
varTerm
24
def
appTerm
20
ref
appTerm
assume
appThm
24
ref
refl
25
def
appThm
25
remove
eqMp
nil
20
remove
axiom
26
def
eqMp
24
remove
assume
26
remove
deductAntisym
deductAntisym
subst
7
remove
refl
eqMp
absThm
eqMp
nil
11
remove
0
remove
3
remove
2
remove
cons
opType
constTerm
9
remove
appTerm
thm
